// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// asyVarAUC_C
NumericVector asyVarAUC_C(NumericVector tt, NumericMatrix D_hat, double mu_hat, NumericMatrix Score, NumericMatrix Hess_inv, NumericMatrix Der_D1_hat, NumericMatrix Der_D2_hat);
RcppExport SEXP _bcROCcurve_asyVarAUC_C(SEXP ttSEXP, SEXP D_hatSEXP, SEXP mu_hatSEXP, SEXP ScoreSEXP, SEXP Hess_invSEXP, SEXP Der_D1_hatSEXP, SEXP Der_D2_hatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D_hat(D_hatSEXP);
    Rcpp::traits::input_parameter< double >::type mu_hat(mu_hatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Score(ScoreSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Hess_inv(Hess_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Der_D1_hat(Der_D1_hatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Der_D2_hat(Der_D2_hatSEXP);
    rcpp_result_gen = Rcpp::wrap(asyVarAUC_C(tt, D_hat, mu_hat, Score, Hess_inv, Der_D1_hat, Der_D2_hat));
    return rcpp_result_gen;
END_RCPP
}
// aucFull_C
double aucFull_C(NumericVector tt, NumericVector dd);
RcppExport SEXP _bcROCcurve_aucFull_C(SEXP ttSEXP, SEXP ddSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dd(ddSEXP);
    rcpp_result_gen = Rcpp::wrap(aucFull_C(tt, dd));
    return rcpp_result_gen;
END_RCPP
}
// aucMAR_C
NumericVector aucMAR_C(NumericVector tt, NumericVector dd, NumericVector vv, NumericVector rho, NumericVector pi);
RcppExport SEXP _bcROCcurve_aucMAR_C(SEXP ttSEXP, SEXP ddSEXP, SEXP vvSEXP, SEXP rhoSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dd(ddSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vv(vvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(aucMAR_C(tt, dd, vv, rho, pi));
    return rcpp_result_gen;
END_RCPP
}
// aucFI_C
double aucFI_C(NumericVector tt, NumericVector rho);
RcppExport SEXP _bcROCcurve_aucFI_C(SEXP ttSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(aucFI_C(tt, rho));
    return rcpp_result_gen;
END_RCPP
}
// aucMSI_C
double aucMSI_C(NumericVector tt, NumericVector dd, NumericVector vv, NumericVector rho);
RcppExport SEXP _bcROCcurve_aucMSI_C(SEXP ttSEXP, SEXP ddSEXP, SEXP vvSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dd(ddSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vv(vvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(aucMSI_C(tt, dd, vv, rho));
    return rcpp_result_gen;
END_RCPP
}
// aucIPW_C
double aucIPW_C(NumericVector tt, NumericVector dd, NumericVector vv, NumericVector pi);
RcppExport SEXP _bcROCcurve_aucIPW_C(SEXP ttSEXP, SEXP ddSEXP, SEXP vvSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dd(ddSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vv(vvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(aucIPW_C(tt, dd, vv, pi));
    return rcpp_result_gen;
END_RCPP
}
// aucDR_C
double aucDR_C(NumericVector tt, NumericVector dd, NumericVector vv, NumericVector rho, NumericVector pi);
RcppExport SEXP _bcROCcurve_aucDR_C(SEXP ttSEXP, SEXP ddSEXP, SEXP vvSEXP, SEXP rhoSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dd(ddSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vv(vvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(aucDR_C(tt, dd, vv, rho, pi));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bcROCcurve_asyVarAUC_C", (DL_FUNC) &_bcROCcurve_asyVarAUC_C, 7},
    {"_bcROCcurve_aucFull_C", (DL_FUNC) &_bcROCcurve_aucFull_C, 2},
    {"_bcROCcurve_aucMAR_C", (DL_FUNC) &_bcROCcurve_aucMAR_C, 5},
    {"_bcROCcurve_aucFI_C", (DL_FUNC) &_bcROCcurve_aucFI_C, 2},
    {"_bcROCcurve_aucMSI_C", (DL_FUNC) &_bcROCcurve_aucMSI_C, 4},
    {"_bcROCcurve_aucIPW_C", (DL_FUNC) &_bcROCcurve_aucIPW_C, 4},
    {"_bcROCcurve_aucDR_C", (DL_FUNC) &_bcROCcurve_aucDR_C, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_bcROCcurve(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
